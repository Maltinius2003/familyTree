#:kivy 1.0.9

#:import CustomDateWidget custom_widgets.CustomDateWidget

<GenderButton@MDRectangleFlatButton>:
    theme_text_color: 'Custom'
    text_color: (1, 0, 0, 1) if self.state == 'down' else (0, 0, 0, 1)

<AddFamilyTreeScreen>:
    name: 'addfamilytree'
    

    MDBoxLayout:
        orientation: 'vertical'
        #adaptive_height: True
        
        MDTopAppBar:
            title: app.t("Add Initial Family Member")
            left_action_items: [['arrow-left', lambda x: root.back_to_menu()]]
            elevation: 10
            size_hint_y: None
            height: dp(56)  # Feste Höhe für die Toolbar

        ScrollView:
            MDBoxLayout:
                id: test
                orientation: 'vertical'
                size_hint_y: None
                height: self.minimum_height
                #spacing: dp(10)

                #canvas.before:
                #    Color:
                #        rgba: 0, 1, 0, 1  # Green color
                #    Rectangle:
                #        pos: self.pos
                #        size: self.size

                # FloatLayout:
                #     pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                #     size_hint: 0.8, 0.05
                    
                #     #farbig
                #     canvas.before:
                #         Color:
                #             rgba: 0.5, 0.5, 0.5, 1  # Gray color
                #         RoundedRectangle:
                #             pos: self.pos
                #             size: self.size
                #             radius: [10, 10, 10, 10]
                #         Line:
                #             rounded_rectangle: (self.x, self.y, self.width, self.height, 10)
                #             width: 1
                    
                #     GridLayout:
                #         cols: 4
                #         pos_hint: {'x': 0.3, 'center_y': 0.5}
                        
                #         GenderButton:
                #             text: app.t('M')
                #             group: 'gender'
                #             on_release: root.setGender('m')
                #             state: 'down' if root.gender == 'm' else 'normal'

                #         GenderButton:
                #             text: app.t('F')
                #             group: 'gender'
                #             on_release: root.setGender('f')
                #             state: 'down' if root.gender == 'f' else 'normal'

                #         GenderButton:
                #             text: app.t('D')
                #             group: 'gender'
                #             on_release: root.setGender('d')
                #             state: 'down' if root.gender == 'd' else 'normal'

                #         GenderButton:
                #             text: app.t('U')
                #             group: 'gender'
                #             on_release: root.setGender('u')
                #             state: 'down' if root.gender == 'u' else 'normal'

                MDSegmentedControl:
                    id: segment_control
                    size_hint_x: 1
                    on_active: root.set_gender(*args)
                
                    MDSegmentedControlItem:
                        id: gender_u
                        text: app.t("U")
                    
                    MDSegmentedControlItem:
                        id: gender_m
                        text: app.t("M")
                    
                    MDSegmentedControlItem:
                        id: gender_f
                        text: app.t("F")
                    
                    MDSegmentedControlItem:
                        id: gender_d
                        text: app.t("D")
                              

                MDTextField:
                    id: firstname
                    hint_text: app.t('First Name')
                    text_color_normal: 0, 0, 0, 1
                    helper_text: app.t('e.g. Hans, Hans-Peter, Hans-Peter-Paul')
                    helper_text_mode: 'on_focus'
                    pos_hint: {'center_x':0.5}
                    size_hint_x: 0.8
                    on_text: root.checkFirstName(self)
                    on_focus: 
                        if not self.focus: root.checkDashAtEnd(self)
                        #if not self.focus: root.set_firstname(self.text)

                MDTextField:
                    id: secondnames
                    hint_text: app.t('Second Name(s)')
                    text_color_normal: 0, 0, 0, 1
                    helper_text: app.t('e.g. Peter, Peter-Paul, Peter Paul, Peter-Paul Dieter')
                    helper_text_mode: 'on_focus'
                    pos_hint: {'center_x':0.5}
                    size_hint_x: 0.8
                    on_text: root.checkSecondNames(self)
                    on_focus:
                        if not self.focus: root.checkDashAtEnd(self) 
                        #if not self.focus: root.set_secondnames(self.text) 

                MDTextField:
                    id: lastname
                    hint_text: app.t('Last Name')
                    text_color_normal: 0, 0, 0, 1
                    helper_text: app.t('e.g. Meier, Meier-Schulze, Meier Schulze, Meier-Schulze Bauer')
                    helper_text_mode: 'on_focus'
                    pos_hint: {'center_x':0.5}
                    size_hint_x: 0.8
                    on_text: root.checkLastName(self)
                    on_focus: 
                        if not self.focus: root.checkDashAtEnd(self)
                        #if not self.focus: root.set_lastname(self.text)

                MDBoxLayout:
                    spacing: dp(20)
                    orientation: 'vertical'
                    size_hint_y: None
                    height: self.minimum_height
                    # Birthdate
                    CustomDateWidget:
                        id: birthdate
                        title: app.t('Birthdate')

                    CustomDateWidget:
                        id: deathdate
                        title: app.t('Deathdate')

                    MDFlatButton:
                        text: app.t('Save')
                        pos_hint: {'center_x':0.5}
                        on_press: root.save(self)
                
                                
                #MDRectangleFlatButton:
                #    text: app.t('Back')
                #    pos_hint: {'center_x':0.5}
                #    on_press: root.manager.current = 'menu'
