#:kivy 1.0.9

<GenderButton@MDRectangleFlatButton>:
    theme_text_color: 'Custom'
    text_color: (1, 0, 0, 1) if self.state == 'down' else (0, 0, 0, 1)

<AddFamilyTreeScreen>:
    name: 'addfamilytree'

    MDBoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1 
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        
        MDTopAppBar:
            title: app.t('Create initial person:')
            left_action_items: [['arrow-left', lambda x: x]]

        MDBoxLayout:
            orientation: 'vertical'
            adaptive_height: True
            padding: '24dp'


            # FloatLayout:
            #     pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            #     size_hint: 0.8, 0.05
                
            #     #farbig
            #     canvas.before:
            #         Color:
            #             rgba: 0.5, 0.5, 0.5, 1  # Gray color
            #         RoundedRectangle:
            #             pos: self.pos
            #             size: self.size
            #             radius: [10, 10, 10, 10]
            #         Line:
            #             rounded_rectangle: (self.x, self.y, self.width, self.height, 10)
            #             width: 1
                
            #     GridLayout:
            #         cols: 4
            #         pos_hint: {'x': 0.3, 'center_y': 0.5}
                    
            #         GenderButton:
            #             text: app.t('M')
            #             group: 'gender'
            #             on_release: root.setGender('m')
            #             state: 'down' if root.gender == 'm' else 'normal'

            #         GenderButton:
            #             text: app.t('F')
            #             group: 'gender'
            #             on_release: root.setGender('f')
            #             state: 'down' if root.gender == 'f' else 'normal'

            #         GenderButton:
            #             text: app.t('D')
            #             group: 'gender'
            #             on_release: root.setGender('d')
            #             state: 'down' if root.gender == 'd' else 'normal'

            #         GenderButton:
            #             text: app.t('U')
            #             group: 'gender'
            #             on_release: root.setGender('u')
            #             state: 'down' if root.gender == 'u' else 'normal'
            

            MDTextField:
                id: firstname
                hint_text: app.t('First Name')
                text_color_normal: 0, 0, 0, 1
                helper_text: app.t('Enter First name e.g. Hans, Hans-Peter, Hans-Peter-Paul')
                helper_text_mode: 'on_focus'
                pos_hint: {'center_x':0.5,'center_y':0.7}
                size_hint_x: 0.8
                on_text: root.checkFirstName(self)
                on_focus: root.checkDashOrSpaceAtEnd(self)
                
            MDTextField:
                id: secondnames
                hint_text: app.t('Second Name(s)')
                text_color_normal: 0, 0, 0, 1
                helper_text: app.t('Enter Second name(s) e.g. Peter, Peter-Paul, Peter Paul, Peter-Paul Dieter')
                helper_text_mode: 'on_focus'
                pos_hint: {'center_x':0.5,'center_y':0.6}
                size_hint_x: 0.8
                on_text: root.checkSecondNames(self)
                on_focus: root.checkDashOrSpaceAtEnd(self)

            MDTextField:
                id: lastname
                hint_text: app.t('Last Name')
                text_color_normal: 0, 0, 0, 1
                helper_text: app.t('Enter Last name e.g. Meier, Meier-Schulze, Meier Schulze, Meier-Schulze Bauer')
                helper_text_mode: 'on_focus'
                pos_hint: {'center_x':0.5,'center_y':0.5}
                size_hint_x: 0.8
                on_text: root.checkLastName(self)
                on_focus: root.checkDashOrSpaceAtEnd(self)

            BoxLayout:
                orientation: 'vertical'
                size_hint: 0.8, None
                height: self.minimum_height
                pos_hint: {'center_x': 0.5, 'center_y': 0.36}
                canvas:
                    Color:
                        rgba: 0.5, 0.5, 0.5, 1  # Gray color
                    Line:
                        rounded_rectangle: (self.x - 20, self.y - 20, self.width, self.height + 20, 10)
                        width: 1

                GridLayout:
                    cols: 2
                    size_hint_x: 1
                    size_hint_y: None
                    height: self.minimum_height

                    MDLabel:
                        text: app.t('Birthdate:')
                        font_size: '16sp'
                        theme_text_color: 'Secondary'
                        size_hint_y: None
                        height: self.texture_size[1]
                        padding_y: 20

                    #Checkbox für vor christlicher Zeitrechnung
                    MDCheckbox:
                        id: bc_checkbox
                        size_hint: None, None
                        size: '20dp', '20dp'
                        pos_hint: {'center_x': 0.5, 'center_y': 1}
                        padding_y: 20
                        #on_active: root.setBC(self.active)




                GridLayout:
                    cols: 3
                    size_hint_x: 1
                    size_hint_y: None
                    height: self.minimum_height

                    #labels
                    MDLabel:
                        text: app.t('Day')
                        font_size: '14sp'
                        size_hint_min_x: 120
                        theme_text_color: 'Secondary'
                    
                    MDLabel:
                        text: app.t('Month')
                        font_size: '14sp'
                        size_hint_min_x: 120
                        theme_text_color: 'Secondary'
                    
                    MDLabel:   
                        text: app.t('Year')
                        font_size: '14sp'
                        size_hint_min_x: 120
                        theme_text_color: 'Secondary'

                    MDFlatButton:
                        id: day_button
                        text: app.t('Day')
                        theme_text_color: 'Secondary'
                        font_size: '20sp'
                        size_hint: 1, 1
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                        width: '120dp'
                        height: '20dp'
                        on_release: root.show_day_menu()
                    
                    MDFlatButton:
                        id: month_button
                        text: app.t('Month')
                        theme_text_color: 'Secondary'
                        font_size: '20sp'
                        size_hint: 1, 1
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                        width: '120dp'
                        height: '20dp'
                        on_release: root.show_month_menu()

                    #Jahr, nötig um Button und Textfeld übereinander zu legen
                    FloatLayout:
                        width: '120dp'
                        height: '20dp'  # Adjust this value to change the height of the frame

                        MDFlatButton:
                            text: app.t('Year')
                            font_size: '20sp'
                            width: '120dp'
                            height: '20dp'
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                            theme_text_color: 'Secondary'
                            opacity: 0 if year_field.focus or year_field.text else 1
                            on_release: 
                                year_field.focus = True
                                #year_field.disabled = False  # Enable the text field when the button is clicked
                            #color
                            canvas.before:
                                Color:
                                    rgba: 1, 0, 0, 1  # Red color
                                Rectangle:
                                    pos: self.pos
                                    size: self.size

                        MDTextField:
                            id: year_field
                            halign: 'center'
                            text_color_normal: 0, 0, 0, 1
                            input_filter: 'int'
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                            font_size: '20sp'  # Same as the button font size
                            line_color_focus: 1, 0, 0, 0
                            line_color_normal: 1, 0, 0, 0 
                            #same size as button
                            #size_hint: 1, 1
                            width: '120dp'
                            height: '20dp'
                            #disabled: True  # Disable the text field by default
                            #color transparent pink
                            

            MDRectangleFlatButton:
                text: app.t('Back')
                pos_hint: {'center_x':0.5,'center_y':0.1}
                on_press: root.manager.current = 'menu'
